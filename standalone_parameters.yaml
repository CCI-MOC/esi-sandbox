resource_registry:
  OS::TripleO::Services::NovaCompute: OS::Heat::None
  OS::TripleO::Services::NovaLibvirt: OS::Heat::None
  OS::TripleO::Services::Redis: /usr/share/openstack-tripleo-heat-templates/deployment/database/redis-pacemaker-puppet.yaml

parameter_defaults:
  CertmongerCA: local
  CloudName: 192.168.1.2
  ContainerImagePrepare:
  - set:
      ceph_image: daemon
      ceph_namespace: docker.io/ceph
      ceph_tag: v3.0.3-stable-3.0-luminous-centos-7-x86_64
      name_prefix: centos-binary-
      name_suffix: ''
      namespace: docker.io/tripleou
      neutron_driver: ovn
      tag: current-tripleo
    tag_from_label: rdo_version
  - push_destination: 192.168.1.2:8787
    set:
      namespace: docker.io/tripleou
    includes:
    - neutron-server
    modify_role: tripleo-modify-image
    modify_append_tag: "-hotfix2"
    modify_vars:
      tasks_from: modify_image.yml
      modify_dir_path: /home/stack/esi-sandbox/custom-dockerfiles/neutron-server
  - push_destination: 192.168.1.2:8787
    set:
      namespace: docker.io/tripleou
    includes:
    - cinder-volume
    modify_role: tripleo-modify-image
    modify_append_tag: "-hotfix"
    modify_vars:
      tasks_from: modify_image.yml
      modify_dir_path: /home/stack/esi-sandbox/custom-dockerfiles/cinder-volume
  ControlPlaneStaticRoutes: []
  Debug: true
  DeploymentUser: stack
  DnsServers:
    - 1.1.1.1
    - 8.8.8.8
  DockerInsecureRegistryAddress:
  - 192.168.1.2:8787

  NeutronPublicInterface: ens10
  # domain name used by the host
  #NeutronDnsDomain: example.com.
  #NeutronPluginExtensions: "qos,port_security,dns_domain_ports"
  # re-use ctlplane bridge for public net
  NeutronBridgeMappings: datacentre:br-ctlplane
  NeutronPhysicalBridge: br-ctlplane
  NeutronFlatNetworks: datacentre
  NeutronMechanismDrivers: [openvswitch, baremetal]
  NeutronNetworkVLANRanges: datacentre:611:620
  NeutronTypeDrivers: [local, geneve, vlan, flat, vxlan]

  # configure neutron to always provide routes to the metadata
  # service via dhcp
  NeutronEnableForceMetadata: true

  StandaloneEnableRoutedNetworks: false
  StandaloneHomeDir: /home/stack
  StandaloneLocalMtu: 1500
  PasswordAuthentication: 'yes'
  #DockerOptions: '--log-driver=journald --signature-verification=false --iptables=false --live-restore --graph /tzumainn'
  IronicEnabledHardwareTypes:
  - ipmi
  IronicEnabledPowerInterfaces:
  - ipmitool
  IronicEnabledManagementInterfaces:
  - ipmitool
  IronicCleaningDiskErase: 'metadata'
  IronicInspectorSubnets:
  - ip_range: 192.168.11.200,192.168.11.250
    gateway: 192.168.11.254
  IronicInspectorInterface: 'inspector'

  StandaloneExtraConfig:
    ironic::config::ironic_config:
      inspector/require_managed_boot:
        value: "true"
    ironic::inspector::pxe_filter::driver: "noop"
